# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=mos -run-pass=greedy -verify-machineinstrs -o - %s | FileCheck %s
---
name: remat_ldimm
legalized: true
regBankSelected: true
tracksRegLiveness: true
body: |
  bb.0.entry:
    liveins: $a
    ; CHECK-LABEL: name: remat_ldimm
    ; CHECK: liveins: $a
    ; CHECK: JSR &fn, mos_csr
    ; CHECK: [[LDImm:%[0-9]+]]:gpr = LDImm 42
    ; CHECK: $a = COPY [[LDImm]]
    ; CHECK: RTS implicit $a
    %0:gpr = LDImm 42
    JSR &fn, mos_csr
    $a = COPY %0
    RTS implicit $a
...
---
name: spill_y
legalized: true
regBankSelected: true
tracksRegLiveness: true
body: |
  bb.0.entry:
    liveins: $y
    ; CHECK-LABEL: name: spill_y
    ; CHECK: liveins: $y
    ; CHECK: [[COPY:%[0-9]+]]:anyi8 = COPY $y
    ; CHECK: dead early-clobber %2:imag16 = STStk [[COPY]], %stack.0, 0 :: (store 1 into %stack.0)
    ; CHECK: JSR &fn, mos_csr
    ; CHECK: %3:anyi8, dead early-clobber %4:imag16 = LDStk %stack.0, 0 :: (load 1 from %stack.0)
    ; CHECK: $y = COPY %3
    ; CHECK: RTS implicit $y
    %0:yc = COPY $y
    JSR &fn, mos_csr
    $y = COPY %0
    RTS implicit $y
...
---
name: unsplittable_conflict
legalized: true
regBankSelected: true
tracksRegLiveness: true
body: |
  bb.0:
    liveins: $a, $x
    ; CHECK-LABEL: name: unsplittable_conflict
    ; CHECK: liveins: $a, $x
    ; CHECK: [[COPY:%[0-9]+]]:imag8 = COPY $a
    ; CHECK: [[COPY1:%[0-9]+]]:imag8 = COPY $x
    ; CHECK: [[LDImm:%[0-9]+]]:gpr = LDImm 251
    ; CHECK: [[COPY2:%[0-9]+]]:imag8 = COPY [[LDImm]]
    ; CHECK: [[LDImm1:%[0-9]+]]:ac = LDImm 6
    ; CHECK: [[EORImag8_:%[0-9]+]]:ac = EORImag8 [[EORImag8_]], [[COPY]]
    ; CHECK: [[ORAImag8_:%[0-9]+]]:ac = ORAImag8 [[ORAImag8_]], [[COPY1]]
    ; CHECK: [[LDImm1:%[0-9]+]]:gpr = LDImm 0
    ; CHECK: [[COPY3:%[0-9]+]]:imag8 = COPY [[LDImm1]]
    ; CHECK: [[LDCImm:%[0-9]+]]:cc = LDCImm -1
    ; CHECK: dead [[ORAImag8_]]:ac, dead [[LDCImm]]:cc, $noreg, dead %8:vc, %9:gpr_lsb = SBCNZImag8 [[ORAImag8_]], [[COPY3]], [[LDCImm]], implicit-def dead $nz
    ; CHECK: [[LDImm2:%[0-9]+]]:gpr = LDImm 1
    ; CHECK: [[COPY4:%[0-9]+]]:imag8 = COPY [[LDImm2]]
    ; CHECK: [[COPY5:%[0-9]+]]:ac = COPY [[COPY]]
    ; CHECK: [[ANDImag8_:%[0-9]+]]:ac = ANDImag8 [[ANDImag8_]], [[COPY2]]
    ; CHECK: [[LDCImm1:%[0-9]+]]:cc = LDCImm -1
    ; CHECK: [[EORImag8_:%[0-9]+]]:ac = EORImag8 [[EORImag8_]], [[COPY4]]
    ; CHECK: [[ORAImag8_1:%[0-9]+]]:ac = ORAImag8 [[ORAImag8_1]], [[COPY1]]
    ; CHECK: [[COPY5:%[0-9]+]]:anyi8 = COPY [[ORAImag8_1]]
    ; CHECK: undef %14.sublsb:imag8 = COPY %9
    ; CHECK: [[COPY6:%[0-9]+]]:ac = COPY [[COPY5]]
    ; CHECK: dead [[COPY6]]:ac, dead [[LDCImm1]]:cc, $noreg, dead %15:vc, undef %22.sublsb:gpr = SBCNZImag8 [[COPY6]], [[COPY3]], [[LDCImm1]], implicit-def dead $nz
    ; CHECK: [[COPY7:%[0-9]+]]:ac = COPY %22
    ; CHECK: [[ORAImag8_2:%[0-9]+]]:ac = ORAImag8 [[ORAImag8_2]], %14
    ; CHECK: dead %17:cc = CMPImmTerm [[ORAImag8_2]], 0, implicit-def dead $nz, implicit-def $z
    ; CHECK: RTS implicit $z
    %1:imag8 = COPY $a
    %2:imag8 = COPY $x
    %73:gpr = LDImm 251
    %48:imag8 = COPY %73
    %42:ac = LDImm 6
    %42:ac = EORImag8 %42, %1
    %42:ac = ORAImag8 %42, %2
    %75:gpr = LDImm 0
    %32:imag8 = COPY %75
    %43:cc = LDCImm -1
    dead %42:ac, dead %43:cc, $noreg, dead %45:vc, %6:gpr_lsb = SBCNZImag8 %42, %32, %43, implicit-def dead $nz
    %68:gpr = LDImm 1
    %27:imag8 = COPY %68
    %29:ac = COPY %1
    %29:ac = ANDImag8 %29, %48
    %33:cc = LDCImm -1
    %29:ac = EORImag8 %29, %27
    %29:ac = ORAImag8 %29, %2
    undef %65.sublsb:imag8 = COPY %6
    dead %29:ac, dead %33:cc, $noreg, dead %35:vc, undef %60.sublsb:ac = SBCNZImag8 %29, %32, %33, implicit-def dead $nz
    %60:ac = ORAImag8 %60, %65
    dead %58:cc = CMPImmTerm %60, 0, implicit-def dead $nz, implicit-def $z
    RTS implicit $z
...
